/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./constants/index.js":
/*!****************************!*\
  !*** ./constants/index.js ***!
  \****************************/
/***/ ((module) => {

eval("const NFT_CONTRACT_ABI = [{\n  inputs: [{\n    internalType: \"string\",\n    name: \"baseURI\",\n    type: \"string\"\n  }, {\n    internalType: \"address\",\n    name: \"whitelistContract\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"approved\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"ApprovalForAll\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"previousOwner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"OwnershipTransferred\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  stateMutability: \"payable\",\n  type: \"fallback\"\n}, {\n  inputs: [],\n  name: \"_paused\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_price\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"getApproved\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }],\n  name: \"isApprovedForAll\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"maxTokenIds\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"mint\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"ownerOf\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"presaleEnded\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"presaleMint\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"presaleStarted\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"renounceOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bool\",\n    name: \"val\",\n    type: \"bool\"\n  }],\n  name: \"setPaused\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"startPresale\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes4\",\n    name: \"interfaceId\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"tokenIds\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenOfOwnerByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"transferOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"withdraw\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  stateMutability: \"payable\",\n  type: \"receive\"\n}];\nconst NFT_CONTRACT_ADDRESS = \"0x498D62C434f8644c431c8aAA8eCB0081574fc835\";\nconst TOKEN_CONTRACT_ABI = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"_cryptoDevsContract\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"previousOwner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"OwnershipTransferred\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  stateMutability: \"payable\",\n  type: \"fallback\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"claim\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"decimals\",\n  outputs: [{\n    internalType: \"uint8\",\n    name: \"\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"subtractedValue\",\n    type: \"uint256\"\n  }],\n  name: \"decreaseAllowance\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"addedValue\",\n    type: \"uint256\"\n  }],\n  name: \"increaseAllowance\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"maxTotalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"mint\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"renounceOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  name: \"tokenIdsClaimed\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"tokenPrice\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"tokensPerNFT\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"transferOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"withdraw\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  stateMutability: \"payable\",\n  type: \"receive\"\n}];\nconst TOKEN_CONTRACT_ADDRESS = \"0x4b64475c09C50FF608A3A6Ce162f6f92b01ed43F\";\nmodule.exports = {\n  NFT_CONTRACT_ABI,\n  NFT_CONTRACT_ADDRESS,\n  TOKEN_CONTRACT_ABI,\n  TOKEN_CONTRACT_ADDRESS\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./constants/index.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ \"./constants/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_constants__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/Home.module.css */ \"./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar _jsxFileName = \"/Users/harshitkrvishwakarma/Code/web3/learnweb3/sophmore/ico/icofrontend/pages/index.js\";\n\n\n\n\n\n\n\nfunction Home() {\n  // Create a BigNumber `0`\n  const zero = ethers__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(0); // walletConnected keeps track of whether the user's wallet is connected or not\n\n  const {\n    0: walletConnected,\n    1: setWalletConnected\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // loading is set to true when we are waiting for a transaction to get mined\n\n  const {\n    0: loading,\n    1: setLoading\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // tokensToBeClaimed keeps track of the number of tokens that can be claimed\n  // based on the Crypto Dev NFT's held by the user for which they havent claimed the tokens\n\n  const {\n    0: tokensToBeClaimed,\n    1: setTokensToBeClaimed\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(zero); // balanceOfCryptoDevTokens keeps track of number of Crypto Dev tokens owned by an address\n\n  const {\n    0: balanceOfCryptoDevTokens,\n    1: setBalanceOfCryptoDevTokens\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(zero); // amount of the tokens that the user wants to mint\n\n  const {\n    0: tokenAmount,\n    1: setTokenAmount\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(zero); // tokensMinted is the total number of tokens that have been minted till now out of 10000(max total supply)\n\n  const {\n    0: tokensMinted,\n    1: setTokensMinted\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(zero); // isOwner gets the owner of the contract through the signed address\n\n  const {\n    0: isOwner,\n    1: setIsOwner\n  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // Create a reference to the Web3 Modal (used for connecting to Metamask) which persists as long as the page is open\n\n  const web3ModalRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n  /**\n   * getTokensToBeClaimed: checks the balance of tokens that can be claimed by the user\n   */\n\n  const getTokensToBeClaimed = async () => {\n    try {\n      // Get the provider from web3Modal, which in our case is MetaMask\n      // No need for the Signer here, as we are only reading state from the blockchain\n      const provider = await getProviderOrSigner(); // Create an instance of NFT Contract\n\n      const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ABI, provider); // Create an instance of tokenContract\n\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, provider); // We will get the signer now to extract the address of the currently connected MetaMask account\n\n      const signer = await getProviderOrSigner(true); // Get the address associated to the signer which is connected to  MetaMask\n\n      const address = await signer.getAddress(); // call the balanceOf from the NFT contract to get the number of NFT's held by the user\n\n      const balance = await nftContract.balanceOf(address); // balance is a Big number and thus we would compare it with Big number `zero`\n\n      if (balance === zero) {\n        setTokensToBeClaimed(zero);\n      } else {\n        // amount keeps track of the number of unclaimed tokens\n        var amount = 0; // For all the NFT's, check if the tokens have already been claimed\n        // Only increase the amount if the tokens have not been claimed\n        // for a an NFT(for a given tokenId)\n\n        for (var i = 0; i < balance; i++) {\n          const tokenId = await nftContract.tokenOfOwnerByIndex(address, i);\n          const claimed = await tokenContract.tokenIdsClaimed(tokenId);\n\n          if (!claimed) {\n            amount++;\n          }\n        } //tokensToBeClaimed has been initialized to a Big Number, thus we would convert amount\n        // to a big number and then set its value\n\n\n        setTokensToBeClaimed(ethers__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(amount));\n      }\n    } catch (err) {\n      console.error(err);\n      setTokensToBeClaimed(zero);\n    }\n  };\n  /**\n   * getBalanceOfCryptoDevTokens: checks the balance of Crypto Dev Tokens's held by an address\n   */\n\n\n  const getBalanceOfCryptoDevTokens = async () => {\n    try {\n      // Get the provider from web3Modal, which in our case is MetaMask\n      // No need for the Signer here, as we are only reading state from the blockchain\n      const provider = await getProviderOrSigner(); // Create an instance of token contract\n\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, provider); // We will get the signer now to extract the address of the currently connected MetaMask account\n\n      const signer = await getProviderOrSigner(true); // Get the address associated to the signer which is connected to  MetaMask\n\n      const address = await signer.getAddress(); // call the balanceOf from the token contract to get the number of tokens held by the user\n\n      const balance = await tokenContract.balanceOf(address); // balance is already a big number, so we dont need to convert it before setting it\n\n      setBalanceOfCryptoDevTokens(balance);\n    } catch (err) {\n      console.error(err);\n      setBalanceOfCryptoDevTokens(zero);\n    }\n  };\n  /**\n   * mintCryptoDevToken: mints `amount` number of tokens to a given address\n   */\n\n\n  const mintCryptoDevToken = async amount => {\n    try {\n      // We need a Signer here since this is a 'write' transaction.\n      // Create an instance of tokenContract\n      const signer = await getProviderOrSigner(true); // Create an instance of tokenContract\n\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, signer); // Each token is of `0.001 ether`. The value we need to send is `0.001 * amount`\n\n      const value = 0.001 * amount;\n      const tx = await tokenContract.mint(amount, {\n        // value signifies the cost of one crypto dev token which is \"0.001\" eth.\n        // We are parsing `0.001` string to ether using the utils library from ethers.js\n        value: ethers__WEBPACK_IMPORTED_MODULE_0__.utils.parseEther(value.toString())\n      });\n      setLoading(true); // wait for the transaction to get mined\n\n      await tx.wait();\n      setLoading(false);\n      window.alert(\"Successfully minted Crypto Dev Tokens\");\n      await getBalanceOfCryptoDevTokens();\n      await getTotalTokensMinted();\n      await getTokensToBeClaimed();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  /**\n   * claimCryptoDevTokens: Helps the user claim Crypto Dev Tokens\n   */\n\n\n  const claimCryptoDevTokens = async () => {\n    try {\n      // We need a Signer here since this is a 'write' transaction.\n      // Create an instance of tokenContract\n      const signer = await getProviderOrSigner(true); // Create an instance of tokenContract\n\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, signer);\n      const tx = await tokenContract.claim();\n      setLoading(true); // wait for the transaction to get mined\n\n      await tx.wait();\n      setLoading(false);\n      window.alert(\"Sucessfully claimed Crypto Dev Tokens\");\n      await getBalanceOfCryptoDevTokens();\n      await getTotalTokensMinted();\n      await getTokensToBeClaimed();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  /**\n   * getTotalTokensMinted: Retrieves how many tokens have been minted till now\n   * out of the total supply\n   */\n\n\n  const getTotalTokensMinted = async () => {\n    try {\n      // Get the provider from web3Modal, which in our case is MetaMask\n      // No need for the Signer here, as we are only reading state from the blockchain\n      const provider = await getProviderOrSigner(); // Create an instance of token contract\n\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, provider); // Get all the tokens that have been minted\n\n      const _tokensMinted = await tokenContract.totalSupply();\n\n      setTokensMinted(_tokensMinted);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  /**\n   * getOwner: gets the contract owner by connected address\n   */\n\n\n  const getOwner = async () => {\n    try {\n      const provider = await getProviderOrSigner();\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, provider); // call the owner function from the contract\n\n      const _owner = await tokenContract.owner(); // we get signer to extract address of currently connected Metamask account\n\n\n      const signer = await getProviderOrSigner(true); // Get the address associated to signer which is connected to Metamask\n\n      const address = await signer.getAddress();\n\n      if (address.toLowerCase() === _owner.toLowerCase()) {\n        setIsOwner(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  /**\n   * withdrawCoins: withdraws ether by calling\n   * the withdraw function in the contract\n   */\n\n\n  const withdrawCoins = async () => {\n    try {\n      const signer = await getProviderOrSigner(true);\n      const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.TOKEN_CONTRACT_ABI, signer);\n      const tx = await tokenContract.withdraw();\n      setLoading(true);\n      await tx.wait();\n      setLoading(false);\n      await getOwner();\n    } catch (err) {\n      console.error(err);\n      window.alert(err.reason);\n    }\n  };\n  /**\n   * Returns a Provider or Signer object representing the Ethereum RPC with or without the\n   * signing capabilities of metamask attached\n   *\n   * A `Provider` is needed to interact with the blockchain - reading transactions, reading balances, reading state, etc.\n   *\n   * A `Signer` is a special type of Provider used in case a `write` transaction needs to be made to the blockchain, which involves the connected account\n   * needing to make a digital signature to authorize the transaction being sent. Metamask exposes a Signer API to allow your website to\n   * request signatures from the user using Signer functions.\n   *\n   * @param {*} needSigner - True if you need the signer, default false otherwise\n   */\n\n\n  const getProviderOrSigner = async (needSigner = false) => {\n    // Connect to Metamask\n    // Since we store `web3Modal` as a reference, we need to access the `current` value to get access to the underlying object\n    const provider = await web3ModalRef.current.connect();\n    const web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.providers.Web3Provider(provider); // If user is not connected to the Goerli network, let them know and throw an error\n\n    const {\n      chainId\n    } = await web3Provider.getNetwork();\n\n    if (chainId !== 5) {\n      window.alert(\"Change the network to Goerli\");\n      throw new Error(\"Change network to Goerli\");\n    }\n\n    if (needSigner) {\n      const signer = web3Provider.getSigner();\n      return signer;\n    }\n\n    return web3Provider;\n  };\n  /*\n        connectWallet: Connects the MetaMask wallet\n      */\n\n\n  const connectWallet = async () => {\n    try {\n      // Get the provider from web3Modal, which in our case is MetaMask\n      // When used for the first time, it prompts the user to connect their wallet\n      await getProviderOrSigner();\n      setWalletConnected(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // useEffects are used to react to changes in state of the website\n  // The array at the end of function call represents what state changes will trigger this effect\n  // In this case, whenever the value of `walletConnected` changes - this effect will be called\n\n\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    // if wallet is not connected, create a new instance of Web3Modal and connect the MetaMask wallet\n    if (!walletConnected) {\n      // Assign the Web3Modal class to the reference object by setting it's `current` value\n      // The `current` value is persisted throughout as long as this page is open\n      web3ModalRef.current = new (web3modal__WEBPACK_IMPORTED_MODULE_3___default())({\n        network: \"goerli\",\n        providerOptions: {},\n        disableInjectedProvider: false\n      });\n      connectWallet();\n      getTotalTokensMinted();\n      getBalanceOfCryptoDevTokens();\n      getTokensToBeClaimed();\n      getOwner();\n    }\n  }, [walletConnected]);\n  /*\n        renderButton: Returns a button based on the state of the dapp\n      */\n\n  const renderButton = () => {\n    // If we are currently waiting for something, return a loading button\n    if (loading) {\n      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this);\n    } // If tokens to be claimed are greater than 0, Return a claim button\n\n\n    if (tokensToBeClaimed > 0) {\n      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n          children: [tokensToBeClaimed * 10, \" Tokens can be claimed!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n          onClick: claimCryptoDevTokens,\n          children: \"Claim Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this);\n    } // If user doesn't have any tokens to claim, show the mint button\n\n\n    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n      style: {\n        display: \"flex-col\"\n      },\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount of Tokens\" // BigNumber.from converts the `e.target.value` to a BigNumber\n          ,\n          onChange: e => setTokenAmount(ethers__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(e.target.value)),\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().input)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n        className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n        disabled: !(tokenAmount > 0),\n        onClick: () => mintCryptoDevToken(tokenAmount),\n        children: \"Mint Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"title\", {\n        children: \"Crypto Devs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"meta\", {\n        name: \"description\",\n        content: \"ICO-Dapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n      className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().main),\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"h1\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().title),\n          children: \"Welcome to Crypto Devs ICO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n          children: \"You can claim or mint Crypto Dev tokens here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), walletConnected ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n            className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n            children: [\"You have minted \", ethers__WEBPACK_IMPORTED_MODULE_0__.utils.formatEther(balanceOfCryptoDevTokens), \" Crypto Dev Tokens\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n            className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n            children: [\"Overall \", ethers__WEBPACK_IMPORTED_MODULE_0__.utils.formatEther(tokensMinted), \"/10000 have been minted!!!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), renderButton(), isOwner ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n            children: loading ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n              className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n              className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n              onClick: withdrawCoins,\n              children: \"Withdraw Coins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"button\", {\n          onClick: connectWallet,\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n          children: \"Connect your wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"img\", {\n          className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().image),\n          src: \"./0.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"footer\", {\n      className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().footer),\n      children: \"Made with \\u2764 by Crypto Devs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBLFFBRGMsZ0JBeUJkO1VBQVEsT0FBTyxFQUFFWSxhQUFqQjtVQUFnQyxTQUFTLEVBQUV0RSx1RUFBM0M7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUEsUUE5Qko7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBLFFBREYsZUFvQ0U7UUFBQSx1QkFDRTtVQUFLLFNBQVMsRUFBRUEsc0VBQWhCO1VBQThCLEdBQUcsRUFBQztRQUFsQztVQUFBO1VBQUE7VUFBQTtRQUFBO01BREY7UUFBQTtRQUFBO1FBQUE7TUFBQSxRQXBDRjtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUEsUUFORixlQStDRTtNQUFRLFNBQVMsRUFBRUEsdUVBQW5CO01BQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBLFFBL0NGO0VBQUE7SUFBQTtJQUFBO0lBQUE7RUFBQSxRQURGO0FBcUREIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWNvZnJvbnRlbmQvLi9wYWdlcy9pbmRleC5qcz9iZWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpZ051bWJlciwgQ29udHJhY3QsIHByb3ZpZGVycywgdXRpbHMgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBXZWIzTW9kYWwgZnJvbSBcIndlYjNtb2RhbFwiO1xuaW1wb3J0IHtcbiAgTkZUX0NPTlRSQUNUX0FCSSxcbiAgTkZUX0NPTlRSQUNUX0FERFJFU1MsXG4gIFRPS0VOX0NPTlRSQUNUX0FCSSxcbiAgVE9LRU5fQ09OVFJBQ1RfQUREUkVTUyxcbn0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi4vc3R5bGVzL0hvbWUubW9kdWxlLmNzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuICAvLyBDcmVhdGUgYSBCaWdOdW1iZXIgYDBgXG4gIGNvbnN0IHplcm8gPSBCaWdOdW1iZXIuZnJvbSgwKTtcbiAgLy8gd2FsbGV0Q29ubmVjdGVkIGtlZXBzIHRyYWNrIG9mIHdoZXRoZXIgdGhlIHVzZXIncyB3YWxsZXQgaXMgY29ubmVjdGVkIG9yIG5vdFxuICBjb25zdCBbd2FsbGV0Q29ubmVjdGVkLCBzZXRXYWxsZXRDb25uZWN0ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAvLyBsb2FkaW5nIGlzIHNldCB0byB0cnVlIHdoZW4gd2UgYXJlIHdhaXRpbmcgZm9yIGEgdHJhbnNhY3Rpb24gdG8gZ2V0IG1pbmVkXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgLy8gdG9rZW5zVG9CZUNsYWltZWQga2VlcHMgdHJhY2sgb2YgdGhlIG51bWJlciBvZiB0b2tlbnMgdGhhdCBjYW4gYmUgY2xhaW1lZFxuICAvLyBiYXNlZCBvbiB0aGUgQ3J5cHRvIERldiBORlQncyBoZWxkIGJ5IHRoZSB1c2VyIGZvciB3aGljaCB0aGV5IGhhdmVudCBjbGFpbWVkIHRoZSB0b2tlbnNcbiAgY29uc3QgW3Rva2Vuc1RvQmVDbGFpbWVkLCBzZXRUb2tlbnNUb0JlQ2xhaW1lZF0gPSB1c2VTdGF0ZSh6ZXJvKTtcbiAgLy8gYmFsYW5jZU9mQ3J5cHRvRGV2VG9rZW5zIGtlZXBzIHRyYWNrIG9mIG51bWJlciBvZiBDcnlwdG8gRGV2IHRva2VucyBvd25lZCBieSBhbiBhZGRyZXNzXG4gIGNvbnN0IFtiYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMsIHNldEJhbGFuY2VPZkNyeXB0b0RldlRva2Vuc10gPVxuICAgIHVzZVN0YXRlKHplcm8pO1xuICAvLyBhbW91bnQgb2YgdGhlIHRva2VucyB0aGF0IHRoZSB1c2VyIHdhbnRzIHRvIG1pbnRcbiAgY29uc3QgW3Rva2VuQW1vdW50LCBzZXRUb2tlbkFtb3VudF0gPSB1c2VTdGF0ZSh6ZXJvKTtcbiAgLy8gdG9rZW5zTWludGVkIGlzIHRoZSB0b3RhbCBudW1iZXIgb2YgdG9rZW5zIHRoYXQgaGF2ZSBiZWVuIG1pbnRlZCB0aWxsIG5vdyBvdXQgb2YgMTAwMDAobWF4IHRvdGFsIHN1cHBseSlcbiAgY29uc3QgW3Rva2Vuc01pbnRlZCwgc2V0VG9rZW5zTWludGVkXSA9IHVzZVN0YXRlKHplcm8pO1xuICAvLyBpc093bmVyIGdldHMgdGhlIG93bmVyIG9mIHRoZSBjb250cmFjdCB0aHJvdWdoIHRoZSBzaWduZWQgYWRkcmVzc1xuICBjb25zdCBbaXNPd25lciwgc2V0SXNPd25lcl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIC8vIENyZWF0ZSBhIHJlZmVyZW5jZSB0byB0aGUgV2ViMyBNb2RhbCAodXNlZCBmb3IgY29ubmVjdGluZyB0byBNZXRhbWFzaykgd2hpY2ggcGVyc2lzdHMgYXMgbG9uZyBhcyB0aGUgcGFnZSBpcyBvcGVuXG4gIGNvbnN0IHdlYjNNb2RhbFJlZiA9IHVzZVJlZigpO1xuXG4gIC8qKlxuICAgKiBnZXRUb2tlbnNUb0JlQ2xhaW1lZDogY2hlY2tzIHRoZSBiYWxhbmNlIG9mIHRva2VucyB0aGF0IGNhbiBiZSBjbGFpbWVkIGJ5IHRoZSB1c2VyXG4gICAqL1xuICBjb25zdCBnZXRUb2tlbnNUb0JlQ2xhaW1lZCA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gR2V0IHRoZSBwcm92aWRlciBmcm9tIHdlYjNNb2RhbCwgd2hpY2ggaW4gb3VyIGNhc2UgaXMgTWV0YU1hc2tcbiAgICAgIC8vIE5vIG5lZWQgZm9yIHRoZSBTaWduZXIgaGVyZSwgYXMgd2UgYXJlIG9ubHkgcmVhZGluZyBzdGF0ZSBmcm9tIHRoZSBibG9ja2NoYWluXG4gICAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IGdldFByb3ZpZGVyT3JTaWduZXIoKTtcbiAgICAgIC8vIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBORlQgQ29udHJhY3RcbiAgICAgIGNvbnN0IG5mdENvbnRyYWN0ID0gbmV3IENvbnRyYWN0KFxuICAgICAgICBORlRfQ09OVFJBQ1RfQUREUkVTUyxcbiAgICAgICAgTkZUX0NPTlRSQUNUX0FCSSxcbiAgICAgICAgcHJvdmlkZXJcbiAgICAgICk7XG4gICAgICAvLyBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdG9rZW5Db250cmFjdFxuICAgICAgY29uc3QgdG9rZW5Db250cmFjdCA9IG5ldyBDb250cmFjdChcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUREUkVTUyxcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUJJLFxuICAgICAgICBwcm92aWRlclxuICAgICAgKTtcbiAgICAgIC8vIFdlIHdpbGwgZ2V0IHRoZSBzaWduZXIgbm93IHRvIGV4dHJhY3QgdGhlIGFkZHJlc3Mgb2YgdGhlIGN1cnJlbnRseSBjb25uZWN0ZWQgTWV0YU1hc2sgYWNjb3VudFxuICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgZ2V0UHJvdmlkZXJPclNpZ25lcih0cnVlKTtcbiAgICAgIC8vIEdldCB0aGUgYWRkcmVzcyBhc3NvY2lhdGVkIHRvIHRoZSBzaWduZXIgd2hpY2ggaXMgY29ubmVjdGVkIHRvICBNZXRhTWFza1xuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IHNpZ25lci5nZXRBZGRyZXNzKCk7XG4gICAgICAvLyBjYWxsIHRoZSBiYWxhbmNlT2YgZnJvbSB0aGUgTkZUIGNvbnRyYWN0IHRvIGdldCB0aGUgbnVtYmVyIG9mIE5GVCdzIGhlbGQgYnkgdGhlIHVzZXJcbiAgICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCBuZnRDb250cmFjdC5iYWxhbmNlT2YoYWRkcmVzcyk7XG4gICAgICAvLyBiYWxhbmNlIGlzIGEgQmlnIG51bWJlciBhbmQgdGh1cyB3ZSB3b3VsZCBjb21wYXJlIGl0IHdpdGggQmlnIG51bWJlciBgemVyb2BcbiAgICAgIGlmIChiYWxhbmNlID09PSB6ZXJvKSB7XG4gICAgICAgIHNldFRva2Vuc1RvQmVDbGFpbWVkKHplcm8pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYW1vdW50IGtlZXBzIHRyYWNrIG9mIHRoZSBudW1iZXIgb2YgdW5jbGFpbWVkIHRva2Vuc1xuICAgICAgICB2YXIgYW1vdW50ID0gMDtcbiAgICAgICAgLy8gRm9yIGFsbCB0aGUgTkZUJ3MsIGNoZWNrIGlmIHRoZSB0b2tlbnMgaGF2ZSBhbHJlYWR5IGJlZW4gY2xhaW1lZFxuICAgICAgICAvLyBPbmx5IGluY3JlYXNlIHRoZSBhbW91bnQgaWYgdGhlIHRva2VucyBoYXZlIG5vdCBiZWVuIGNsYWltZWRcbiAgICAgICAgLy8gZm9yIGEgYW4gTkZUKGZvciBhIGdpdmVuIHRva2VuSWQpXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmFsYW5jZTsgaSsrKSB7XG4gICAgICAgICAgY29uc3QgdG9rZW5JZCA9IGF3YWl0IG5mdENvbnRyYWN0LnRva2VuT2ZPd25lckJ5SW5kZXgoYWRkcmVzcywgaSk7XG4gICAgICAgICAgY29uc3QgY2xhaW1lZCA9IGF3YWl0IHRva2VuQ29udHJhY3QudG9rZW5JZHNDbGFpbWVkKHRva2VuSWQpO1xuICAgICAgICAgIGlmICghY2xhaW1lZCkge1xuICAgICAgICAgICAgYW1vdW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vdG9rZW5zVG9CZUNsYWltZWQgaGFzIGJlZW4gaW5pdGlhbGl6ZWQgdG8gYSBCaWcgTnVtYmVyLCB0aHVzIHdlIHdvdWxkIGNvbnZlcnQgYW1vdW50XG4gICAgICAgIC8vIHRvIGEgYmlnIG51bWJlciBhbmQgdGhlbiBzZXQgaXRzIHZhbHVlXG4gICAgICAgIHNldFRva2Vuc1RvQmVDbGFpbWVkKEJpZ051bWJlci5mcm9tKGFtb3VudCkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgc2V0VG9rZW5zVG9CZUNsYWltZWQoemVybyk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBnZXRCYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnM6IGNoZWNrcyB0aGUgYmFsYW5jZSBvZiBDcnlwdG8gRGV2IFRva2VucydzIGhlbGQgYnkgYW4gYWRkcmVzc1xuICAgKi9cbiAgY29uc3QgZ2V0QmFsYW5jZU9mQ3J5cHRvRGV2VG9rZW5zID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBHZXQgdGhlIHByb3ZpZGVyIGZyb20gd2ViM01vZGFsLCB3aGljaCBpbiBvdXIgY2FzZSBpcyBNZXRhTWFza1xuICAgICAgLy8gTm8gbmVlZCBmb3IgdGhlIFNpZ25lciBoZXJlLCBhcyB3ZSBhcmUgb25seSByZWFkaW5nIHN0YXRlIGZyb20gdGhlIGJsb2NrY2hhaW5cbiAgICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgZ2V0UHJvdmlkZXJPclNpZ25lcigpO1xuICAgICAgLy8gQ3JlYXRlIGFuIGluc3RhbmNlIG9mIHRva2VuIGNvbnRyYWN0XG4gICAgICBjb25zdCB0b2tlbkNvbnRyYWN0ID0gbmV3IENvbnRyYWN0KFxuICAgICAgICBUT0tFTl9DT05UUkFDVF9BRERSRVNTLFxuICAgICAgICBUT0tFTl9DT05UUkFDVF9BQkksXG4gICAgICAgIHByb3ZpZGVyXG4gICAgICApO1xuICAgICAgLy8gV2Ugd2lsbCBnZXQgdGhlIHNpZ25lciBub3cgdG8gZXh0cmFjdCB0aGUgYWRkcmVzcyBvZiB0aGUgY3VycmVudGx5IGNvbm5lY3RlZCBNZXRhTWFzayBhY2NvdW50XG4gICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCBnZXRQcm92aWRlck9yU2lnbmVyKHRydWUpO1xuICAgICAgLy8gR2V0IHRoZSBhZGRyZXNzIGFzc29jaWF0ZWQgdG8gdGhlIHNpZ25lciB3aGljaCBpcyBjb25uZWN0ZWQgdG8gIE1ldGFNYXNrXG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgc2lnbmVyLmdldEFkZHJlc3MoKTtcbiAgICAgIC8vIGNhbGwgdGhlIGJhbGFuY2VPZiBmcm9tIHRoZSB0b2tlbiBjb250cmFjdCB0byBnZXQgdGhlIG51bWJlciBvZiB0b2tlbnMgaGVsZCBieSB0aGUgdXNlclxuICAgICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IHRva2VuQ29udHJhY3QuYmFsYW5jZU9mKGFkZHJlc3MpO1xuICAgICAgLy8gYmFsYW5jZSBpcyBhbHJlYWR5IGEgYmlnIG51bWJlciwgc28gd2UgZG9udCBuZWVkIHRvIGNvbnZlcnQgaXQgYmVmb3JlIHNldHRpbmcgaXRcbiAgICAgIHNldEJhbGFuY2VPZkNyeXB0b0RldlRva2VucyhiYWxhbmNlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHNldEJhbGFuY2VPZkNyeXB0b0RldlRva2Vucyh6ZXJvKTtcbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIG1pbnRDcnlwdG9EZXZUb2tlbjogbWludHMgYGFtb3VudGAgbnVtYmVyIG9mIHRva2VucyB0byBhIGdpdmVuIGFkZHJlc3NcbiAgICovXG4gIGNvbnN0IG1pbnRDcnlwdG9EZXZUb2tlbiA9IGFzeW5jIChhbW91bnQpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gV2UgbmVlZCBhIFNpZ25lciBoZXJlIHNpbmNlIHRoaXMgaXMgYSAnd3JpdGUnIHRyYW5zYWN0aW9uLlxuICAgICAgLy8gQ3JlYXRlIGFuIGluc3RhbmNlIG9mIHRva2VuQ29udHJhY3RcbiAgICAgIGNvbnN0IHNpZ25lciA9IGF3YWl0IGdldFByb3ZpZGVyT3JTaWduZXIodHJ1ZSk7XG4gICAgICAvLyBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdG9rZW5Db250cmFjdFxuICAgICAgY29uc3QgdG9rZW5Db250cmFjdCA9IG5ldyBDb250cmFjdChcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUREUkVTUyxcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUJJLFxuICAgICAgICBzaWduZXJcbiAgICAgICk7XG4gICAgICAvLyBFYWNoIHRva2VuIGlzIG9mIGAwLjAwMSBldGhlcmAuIFRoZSB2YWx1ZSB3ZSBuZWVkIHRvIHNlbmQgaXMgYDAuMDAxICogYW1vdW50YFxuICAgICAgY29uc3QgdmFsdWUgPSAwLjAwMSAqIGFtb3VudDtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgdG9rZW5Db250cmFjdC5taW50KGFtb3VudCwge1xuICAgICAgICAvLyB2YWx1ZSBzaWduaWZpZXMgdGhlIGNvc3Qgb2Ygb25lIGNyeXB0byBkZXYgdG9rZW4gd2hpY2ggaXMgXCIwLjAwMVwiIGV0aC5cbiAgICAgICAgLy8gV2UgYXJlIHBhcnNpbmcgYDAuMDAxYCBzdHJpbmcgdG8gZXRoZXIgdXNpbmcgdGhlIHV0aWxzIGxpYnJhcnkgZnJvbSBldGhlcnMuanNcbiAgICAgICAgdmFsdWU6IHV0aWxzLnBhcnNlRXRoZXIodmFsdWUudG9TdHJpbmcoKSksXG4gICAgICB9KTtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAvLyB3YWl0IGZvciB0aGUgdHJhbnNhY3Rpb24gdG8gZ2V0IG1pbmVkXG4gICAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHdpbmRvdy5hbGVydChcIlN1Y2Nlc3NmdWxseSBtaW50ZWQgQ3J5cHRvIERldiBUb2tlbnNcIik7XG4gICAgICBhd2FpdCBnZXRCYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMoKTtcbiAgICAgIGF3YWl0IGdldFRvdGFsVG9rZW5zTWludGVkKCk7XG4gICAgICBhd2FpdCBnZXRUb2tlbnNUb0JlQ2xhaW1lZCgpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogY2xhaW1DcnlwdG9EZXZUb2tlbnM6IEhlbHBzIHRoZSB1c2VyIGNsYWltIENyeXB0byBEZXYgVG9rZW5zXG4gICAqL1xuICBjb25zdCBjbGFpbUNyeXB0b0RldlRva2VucyA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gV2UgbmVlZCBhIFNpZ25lciBoZXJlIHNpbmNlIHRoaXMgaXMgYSAnd3JpdGUnIHRyYW5zYWN0aW9uLlxuICAgICAgLy8gQ3JlYXRlIGFuIGluc3RhbmNlIG9mIHRva2VuQ29udHJhY3RcbiAgICAgIGNvbnN0IHNpZ25lciA9IGF3YWl0IGdldFByb3ZpZGVyT3JTaWduZXIodHJ1ZSk7XG4gICAgICAvLyBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdG9rZW5Db250cmFjdFxuICAgICAgY29uc3QgdG9rZW5Db250cmFjdCA9IG5ldyBDb250cmFjdChcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUREUkVTUyxcbiAgICAgICAgVE9LRU5fQ09OVFJBQ1RfQUJJLFxuICAgICAgICBzaWduZXJcbiAgICAgICk7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHRva2VuQ29udHJhY3QuY2xhaW0oKTtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAvLyB3YWl0IGZvciB0aGUgdHJhbnNhY3Rpb24gdG8gZ2V0IG1pbmVkXG4gICAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHdpbmRvdy5hbGVydChcIlN1Y2Vzc2Z1bGx5IGNsYWltZWQgQ3J5cHRvIERldiBUb2tlbnNcIik7XG4gICAgICBhd2FpdCBnZXRCYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMoKTtcbiAgICAgIGF3YWl0IGdldFRvdGFsVG9rZW5zTWludGVkKCk7XG4gICAgICBhd2FpdCBnZXRUb2tlbnNUb0JlQ2xhaW1lZCgpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogZ2V0VG90YWxUb2tlbnNNaW50ZWQ6IFJldHJpZXZlcyBob3cgbWFueSB0b2tlbnMgaGF2ZSBiZWVuIG1pbnRlZCB0aWxsIG5vd1xuICAgKiBvdXQgb2YgdGhlIHRvdGFsIHN1cHBseVxuICAgKi9cbiAgY29uc3QgZ2V0VG90YWxUb2tlbnNNaW50ZWQgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEdldCB0aGUgcHJvdmlkZXIgZnJvbSB3ZWIzTW9kYWwsIHdoaWNoIGluIG91ciBjYXNlIGlzIE1ldGFNYXNrXG4gICAgICAvLyBObyBuZWVkIGZvciB0aGUgU2lnbmVyIGhlcmUsIGFzIHdlIGFyZSBvbmx5IHJlYWRpbmcgc3RhdGUgZnJvbSB0aGUgYmxvY2tjaGFpblxuICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCBnZXRQcm92aWRlck9yU2lnbmVyKCk7XG4gICAgICAvLyBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdG9rZW4gY29udHJhY3RcbiAgICAgIGNvbnN0IHRva2VuQ29udHJhY3QgPSBuZXcgQ29udHJhY3QoXG4gICAgICAgIFRPS0VOX0NPTlRSQUNUX0FERFJFU1MsXG4gICAgICAgIFRPS0VOX0NPTlRSQUNUX0FCSSxcbiAgICAgICAgcHJvdmlkZXJcbiAgICAgICk7XG4gICAgICAvLyBHZXQgYWxsIHRoZSB0b2tlbnMgdGhhdCBoYXZlIGJlZW4gbWludGVkXG4gICAgICBjb25zdCBfdG9rZW5zTWludGVkID0gYXdhaXQgdG9rZW5Db250cmFjdC50b3RhbFN1cHBseSgpO1xuICAgICAgc2V0VG9rZW5zTWludGVkKF90b2tlbnNNaW50ZWQpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogZ2V0T3duZXI6IGdldHMgdGhlIGNvbnRyYWN0IG93bmVyIGJ5IGNvbm5lY3RlZCBhZGRyZXNzXG4gICAqL1xuICBjb25zdCBnZXRPd25lciA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCBnZXRQcm92aWRlck9yU2lnbmVyKCk7XG4gICAgICBjb25zdCB0b2tlbkNvbnRyYWN0ID0gbmV3IENvbnRyYWN0KFxuICAgICAgICBUT0tFTl9DT05UUkFDVF9BRERSRVNTLFxuICAgICAgICBUT0tFTl9DT05UUkFDVF9BQkksXG4gICAgICAgIHByb3ZpZGVyXG4gICAgICApO1xuICAgICAgLy8gY2FsbCB0aGUgb3duZXIgZnVuY3Rpb24gZnJvbSB0aGUgY29udHJhY3RcbiAgICAgIGNvbnN0IF9vd25lciA9IGF3YWl0IHRva2VuQ29udHJhY3Qub3duZXIoKTtcbiAgICAgIC8vIHdlIGdldCBzaWduZXIgdG8gZXh0cmFjdCBhZGRyZXNzIG9mIGN1cnJlbnRseSBjb25uZWN0ZWQgTWV0YW1hc2sgYWNjb3VudFxuICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgZ2V0UHJvdmlkZXJPclNpZ25lcih0cnVlKTtcbiAgICAgIC8vIEdldCB0aGUgYWRkcmVzcyBhc3NvY2lhdGVkIHRvIHNpZ25lciB3aGljaCBpcyBjb25uZWN0ZWQgdG8gTWV0YW1hc2tcbiAgICAgIGNvbnN0IGFkZHJlc3MgPSBhd2FpdCBzaWduZXIuZ2V0QWRkcmVzcygpO1xuICAgICAgaWYgKGFkZHJlc3MudG9Mb3dlckNhc2UoKSA9PT0gX293bmVyLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgc2V0SXNPd25lcih0cnVlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLm1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogd2l0aGRyYXdDb2luczogd2l0aGRyYXdzIGV0aGVyIGJ5IGNhbGxpbmdcbiAgICogdGhlIHdpdGhkcmF3IGZ1bmN0aW9uIGluIHRoZSBjb250cmFjdFxuICAgKi9cbiAgY29uc3Qgd2l0aGRyYXdDb2lucyA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgZ2V0UHJvdmlkZXJPclNpZ25lcih0cnVlKTtcbiAgICAgIGNvbnN0IHRva2VuQ29udHJhY3QgPSBuZXcgQ29udHJhY3QoXG4gICAgICAgIFRPS0VOX0NPTlRSQUNUX0FERFJFU1MsXG4gICAgICAgIFRPS0VOX0NPTlRSQUNUX0FCSSxcbiAgICAgICAgc2lnbmVyXG4gICAgICApO1xuXG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHRva2VuQ29udHJhY3Qud2l0aGRyYXcoKTtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIGF3YWl0IGdldE93bmVyKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB3aW5kb3cuYWxlcnQoZXJyLnJlYXNvbik7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgUHJvdmlkZXIgb3IgU2lnbmVyIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIEV0aGVyZXVtIFJQQyB3aXRoIG9yIHdpdGhvdXQgdGhlXG4gICAqIHNpZ25pbmcgY2FwYWJpbGl0aWVzIG9mIG1ldGFtYXNrIGF0dGFjaGVkXG4gICAqXG4gICAqIEEgYFByb3ZpZGVyYCBpcyBuZWVkZWQgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgYmxvY2tjaGFpbiAtIHJlYWRpbmcgdHJhbnNhY3Rpb25zLCByZWFkaW5nIGJhbGFuY2VzLCByZWFkaW5nIHN0YXRlLCBldGMuXG4gICAqXG4gICAqIEEgYFNpZ25lcmAgaXMgYSBzcGVjaWFsIHR5cGUgb2YgUHJvdmlkZXIgdXNlZCBpbiBjYXNlIGEgYHdyaXRlYCB0cmFuc2FjdGlvbiBuZWVkcyB0byBiZSBtYWRlIHRvIHRoZSBibG9ja2NoYWluLCB3aGljaCBpbnZvbHZlcyB0aGUgY29ubmVjdGVkIGFjY291bnRcbiAgICogbmVlZGluZyB0byBtYWtlIGEgZGlnaXRhbCBzaWduYXR1cmUgdG8gYXV0aG9yaXplIHRoZSB0cmFuc2FjdGlvbiBiZWluZyBzZW50LiBNZXRhbWFzayBleHBvc2VzIGEgU2lnbmVyIEFQSSB0byBhbGxvdyB5b3VyIHdlYnNpdGUgdG9cbiAgICogcmVxdWVzdCBzaWduYXR1cmVzIGZyb20gdGhlIHVzZXIgdXNpbmcgU2lnbmVyIGZ1bmN0aW9ucy5cbiAgICpcbiAgICogQHBhcmFtIHsqfSBuZWVkU2lnbmVyIC0gVHJ1ZSBpZiB5b3UgbmVlZCB0aGUgc2lnbmVyLCBkZWZhdWx0IGZhbHNlIG90aGVyd2lzZVxuICAgKi9cbiAgY29uc3QgZ2V0UHJvdmlkZXJPclNpZ25lciA9IGFzeW5jIChuZWVkU2lnbmVyID0gZmFsc2UpID0+IHtcbiAgICAvLyBDb25uZWN0IHRvIE1ldGFtYXNrXG4gICAgLy8gU2luY2Ugd2Ugc3RvcmUgYHdlYjNNb2RhbGAgYXMgYSByZWZlcmVuY2UsIHdlIG5lZWQgdG8gYWNjZXNzIHRoZSBgY3VycmVudGAgdmFsdWUgdG8gZ2V0IGFjY2VzcyB0byB0aGUgdW5kZXJseWluZyBvYmplY3RcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHdlYjNNb2RhbFJlZi5jdXJyZW50LmNvbm5lY3QoKTtcbiAgICBjb25zdCB3ZWIzUHJvdmlkZXIgPSBuZXcgcHJvdmlkZXJzLldlYjNQcm92aWRlcihwcm92aWRlcik7XG5cbiAgICAvLyBJZiB1c2VyIGlzIG5vdCBjb25uZWN0ZWQgdG8gdGhlIEdvZXJsaSBuZXR3b3JrLCBsZXQgdGhlbSBrbm93IGFuZCB0aHJvdyBhbiBlcnJvclxuICAgIGNvbnN0IHsgY2hhaW5JZCB9ID0gYXdhaXQgd2ViM1Byb3ZpZGVyLmdldE5ldHdvcmsoKTtcbiAgICBpZiAoY2hhaW5JZCAhPT0gNSkge1xuICAgICAgd2luZG93LmFsZXJ0KFwiQ2hhbmdlIHRoZSBuZXR3b3JrIHRvIEdvZXJsaVwiKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNoYW5nZSBuZXR3b3JrIHRvIEdvZXJsaVwiKTtcbiAgICB9XG5cbiAgICBpZiAobmVlZFNpZ25lcikge1xuICAgICAgY29uc3Qgc2lnbmVyID0gd2ViM1Byb3ZpZGVyLmdldFNpZ25lcigpO1xuICAgICAgcmV0dXJuIHNpZ25lcjtcbiAgICB9XG4gICAgcmV0dXJuIHdlYjNQcm92aWRlcjtcbiAgfTtcblxuICAvKlxuICAgICAgICBjb25uZWN0V2FsbGV0OiBDb25uZWN0cyB0aGUgTWV0YU1hc2sgd2FsbGV0XG4gICAgICAqL1xuICBjb25zdCBjb25uZWN0V2FsbGV0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBHZXQgdGhlIHByb3ZpZGVyIGZyb20gd2ViM01vZGFsLCB3aGljaCBpbiBvdXIgY2FzZSBpcyBNZXRhTWFza1xuICAgICAgLy8gV2hlbiB1c2VkIGZvciB0aGUgZmlyc3QgdGltZSwgaXQgcHJvbXB0cyB0aGUgdXNlciB0byBjb25uZWN0IHRoZWlyIHdhbGxldFxuICAgICAgYXdhaXQgZ2V0UHJvdmlkZXJPclNpZ25lcigpO1xuICAgICAgc2V0V2FsbGV0Q29ubmVjdGVkKHRydWUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH1cbiAgfTtcblxuICAvLyB1c2VFZmZlY3RzIGFyZSB1c2VkIHRvIHJlYWN0IHRvIGNoYW5nZXMgaW4gc3RhdGUgb2YgdGhlIHdlYnNpdGVcbiAgLy8gVGhlIGFycmF5IGF0IHRoZSBlbmQgb2YgZnVuY3Rpb24gY2FsbCByZXByZXNlbnRzIHdoYXQgc3RhdGUgY2hhbmdlcyB3aWxsIHRyaWdnZXIgdGhpcyBlZmZlY3RcbiAgLy8gSW4gdGhpcyBjYXNlLCB3aGVuZXZlciB0aGUgdmFsdWUgb2YgYHdhbGxldENvbm5lY3RlZGAgY2hhbmdlcyAtIHRoaXMgZWZmZWN0IHdpbGwgYmUgY2FsbGVkXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gaWYgd2FsbGV0IGlzIG5vdCBjb25uZWN0ZWQsIGNyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBXZWIzTW9kYWwgYW5kIGNvbm5lY3QgdGhlIE1ldGFNYXNrIHdhbGxldFxuICAgIGlmICghd2FsbGV0Q29ubmVjdGVkKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIFdlYjNNb2RhbCBjbGFzcyB0byB0aGUgcmVmZXJlbmNlIG9iamVjdCBieSBzZXR0aW5nIGl0J3MgYGN1cnJlbnRgIHZhbHVlXG4gICAgICAvLyBUaGUgYGN1cnJlbnRgIHZhbHVlIGlzIHBlcnNpc3RlZCB0aHJvdWdob3V0IGFzIGxvbmcgYXMgdGhpcyBwYWdlIGlzIG9wZW5cbiAgICAgIHdlYjNNb2RhbFJlZi5jdXJyZW50ID0gbmV3IFdlYjNNb2RhbCh7XG4gICAgICAgIG5ldHdvcms6IFwiZ29lcmxpXCIsXG4gICAgICAgIHByb3ZpZGVyT3B0aW9uczoge30sXG4gICAgICAgIGRpc2FibGVJbmplY3RlZFByb3ZpZGVyOiBmYWxzZSxcbiAgICAgIH0pO1xuICAgICAgY29ubmVjdFdhbGxldCgpO1xuICAgICAgZ2V0VG90YWxUb2tlbnNNaW50ZWQoKTtcbiAgICAgIGdldEJhbGFuY2VPZkNyeXB0b0RldlRva2VucygpO1xuICAgICAgZ2V0VG9rZW5zVG9CZUNsYWltZWQoKTtcbiAgICAgIGdldE93bmVyKCk7XG4gICAgfVxuICB9LCBbd2FsbGV0Q29ubmVjdGVkXSk7XG5cbiAgLypcbiAgICAgICAgcmVuZGVyQnV0dG9uOiBSZXR1cm5zIGEgYnV0dG9uIGJhc2VkIG9uIHRoZSBzdGF0ZSBvZiB0aGUgZGFwcFxuICAgICAgKi9cbiAgY29uc3QgcmVuZGVyQnV0dG9uID0gKCkgPT4ge1xuICAgIC8vIElmIHdlIGFyZSBjdXJyZW50bHkgd2FpdGluZyBmb3Igc29tZXRoaW5nLCByZXR1cm4gYSBsb2FkaW5nIGJ1dHRvblxuICAgIGlmIChsb2FkaW5nKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtzdHlsZXMuYnV0dG9ufT5Mb2FkaW5nLi4uPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gICAgLy8gSWYgdG9rZW5zIHRvIGJlIGNsYWltZWQgYXJlIGdyZWF0ZXIgdGhhbiAwLCBSZXR1cm4gYSBjbGFpbSBidXR0b25cbiAgICBpZiAodG9rZW5zVG9CZUNsYWltZWQgPiAwKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGVzY3JpcHRpb259PlxuICAgICAgICAgICAge3Rva2Vuc1RvQmVDbGFpbWVkICogMTB9IFRva2VucyBjYW4gYmUgY2xhaW1lZCFcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17c3R5bGVzLmJ1dHRvbn0gb25DbGljaz17Y2xhaW1DcnlwdG9EZXZUb2tlbnN9PlxuICAgICAgICAgICAgQ2xhaW0gVG9rZW5zXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gICAgLy8gSWYgdXNlciBkb2Vzbid0IGhhdmUgYW55IHRva2VucyB0byBjbGFpbSwgc2hvdyB0aGUgbWludCBidXR0b25cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiBcImZsZXgtY29sXCIgfX0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQW1vdW50IG9mIFRva2Vuc1wiXG4gICAgICAgICAgICAvLyBCaWdOdW1iZXIuZnJvbSBjb252ZXJ0cyB0aGUgYGUudGFyZ2V0LnZhbHVlYCB0byBhIEJpZ051bWJlclxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUb2tlbkFtb3VudChCaWdOdW1iZXIuZnJvbShlLnRhcmdldC52YWx1ZSkpfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuaW5wdXR9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICBkaXNhYmxlZD17ISh0b2tlbkFtb3VudCA+IDApfVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG1pbnRDcnlwdG9EZXZUb2tlbih0b2tlbkFtb3VudCl9XG4gICAgICAgID5cbiAgICAgICAgICBNaW50IFRva2Vuc1xuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5DcnlwdG8gRGV2czwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJJQ08tRGFwcFwiIC8+XG4gICAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2Zhdmljb24uaWNvXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubWFpbn0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT17c3R5bGVzLnRpdGxlfT5XZWxjb21lIHRvIENyeXB0byBEZXZzIElDTyE8L2gxPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGVzY3JpcHRpb259PlxuICAgICAgICAgICAgWW91IGNhbiBjbGFpbSBvciBtaW50IENyeXB0byBEZXYgdG9rZW5zIGhlcmVcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7d2FsbGV0Q29ubmVjdGVkID8gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kZXNjcmlwdGlvbn0+XG4gICAgICAgICAgICAgICAgey8qIEZvcm1hdCBFdGhlciBoZWxwcyB1cyBpbiBjb252ZXJ0aW5nIGEgQmlnTnVtYmVyIHRvIHN0cmluZyAqL31cbiAgICAgICAgICAgICAgICBZb3UgaGF2ZSBtaW50ZWQge3V0aWxzLmZvcm1hdEV0aGVyKGJhbGFuY2VPZkNyeXB0b0RldlRva2Vucyl9IENyeXB0b1xuICAgICAgICAgICAgICAgIERldiBUb2tlbnNcbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuZGVzY3JpcHRpb259PlxuICAgICAgICAgICAgICAgIHsvKiBGb3JtYXQgRXRoZXIgaGVscHMgdXMgaW4gY29udmVydGluZyBhIEJpZ051bWJlciB0byBzdHJpbmcgKi99XG4gICAgICAgICAgICAgICAgT3ZlcmFsbCB7dXRpbHMuZm9ybWF0RXRoZXIodG9rZW5zTWludGVkKX0vMTAwMDAgaGF2ZSBiZWVuIG1pbnRlZCEhIVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAge3JlbmRlckJ1dHRvbigpfVxuICAgICAgICAgICAgICB7LyogRGlzcGxheSBhZGRpdGlvbmFsIHdpdGhkcmF3IGJ1dHRvbiBpZiBjb25uZWN0ZWQgd2FsbGV0IGlzIG93bmVyICovfVxuICAgICAgICAgICAgICAgIHtpc093bmVyID8gKFxuICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIHtsb2FkaW5nID8gPGJ1dHRvbiBjbGFzc05hbWU9e3N0eWxlcy5idXR0b259PkxvYWRpbmcuLi48L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDogPGJ1dHRvbiBjbGFzc05hbWU9e3N0eWxlcy5idXR0b259IG9uQ2xpY2s9e3dpdGhkcmF3Q29pbnN9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdpdGhkcmF3IENvaW5zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICApIDogKFwiXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17Y29ubmVjdFdhbGxldH0gY2xhc3NOYW1lPXtzdHlsZXMuYnV0dG9ufT5cbiAgICAgICAgICAgICAgQ29ubmVjdCB5b3VyIHdhbGxldFxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy5pbWFnZX0gc3JjPVwiLi8wLnN2Z1wiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxmb290ZXIgY2xhc3NOYW1lPXtzdHlsZXMuZm9vdGVyfT5cbiAgICAgICAgTWFkZSB3aXRoICYjMTAwODQ7IGJ5IENyeXB0byBEZXZzXG4gICAgICA8L2Zvb3Rlcj5cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXSwibmFtZXMiOlsiQmlnTnVtYmVyIiwiQ29udHJhY3QiLCJwcm92aWRlcnMiLCJ1dGlscyIsIkhlYWQiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIldlYjNNb2RhbCIsIk5GVF9DT05UUkFDVF9BQkkiLCJORlRfQ09OVFJBQ1RfQUREUkVTUyIsIlRPS0VOX0NPTlRSQUNUX0FCSSIsIlRPS0VOX0NPTlRSQUNUX0FERFJFU1MiLCJzdHlsZXMiLCJIb21lIiwiemVybyIsImZyb20iLCJ3YWxsZXRDb25uZWN0ZWQiLCJzZXRXYWxsZXRDb25uZWN0ZWQiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsInRva2Vuc1RvQmVDbGFpbWVkIiwic2V0VG9rZW5zVG9CZUNsYWltZWQiLCJiYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMiLCJzZXRCYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMiLCJ0b2tlbkFtb3VudCIsInNldFRva2VuQW1vdW50IiwidG9rZW5zTWludGVkIiwic2V0VG9rZW5zTWludGVkIiwiaXNPd25lciIsInNldElzT3duZXIiLCJ3ZWIzTW9kYWxSZWYiLCJnZXRUb2tlbnNUb0JlQ2xhaW1lZCIsInByb3ZpZGVyIiwiZ2V0UHJvdmlkZXJPclNpZ25lciIsIm5mdENvbnRyYWN0IiwidG9rZW5Db250cmFjdCIsInNpZ25lciIsImFkZHJlc3MiLCJnZXRBZGRyZXNzIiwiYmFsYW5jZSIsImJhbGFuY2VPZiIsImFtb3VudCIsImkiLCJ0b2tlbklkIiwidG9rZW5PZk93bmVyQnlJbmRleCIsImNsYWltZWQiLCJ0b2tlbklkc0NsYWltZWQiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRCYWxhbmNlT2ZDcnlwdG9EZXZUb2tlbnMiLCJtaW50Q3J5cHRvRGV2VG9rZW4iLCJ2YWx1ZSIsInR4IiwibWludCIsInBhcnNlRXRoZXIiLCJ0b1N0cmluZyIsIndhaXQiLCJ3aW5kb3ciLCJhbGVydCIsImdldFRvdGFsVG9rZW5zTWludGVkIiwiY2xhaW1DcnlwdG9EZXZUb2tlbnMiLCJjbGFpbSIsIl90b2tlbnNNaW50ZWQiLCJ0b3RhbFN1cHBseSIsImdldE93bmVyIiwiX293bmVyIiwib3duZXIiLCJ0b0xvd2VyQ2FzZSIsIm1lc3NhZ2UiLCJ3aXRoZHJhd0NvaW5zIiwid2l0aGRyYXciLCJyZWFzb24iLCJuZWVkU2lnbmVyIiwiY3VycmVudCIsImNvbm5lY3QiLCJ3ZWIzUHJvdmlkZXIiLCJXZWIzUHJvdmlkZXIiLCJjaGFpbklkIiwiZ2V0TmV0d29yayIsIkVycm9yIiwiZ2V0U2lnbmVyIiwiY29ubmVjdFdhbGxldCIsIm5ldHdvcmsiLCJwcm92aWRlck9wdGlvbnMiLCJkaXNhYmxlSW5qZWN0ZWRQcm92aWRlciIsInJlbmRlckJ1dHRvbiIsImJ1dHRvbiIsImRlc2NyaXB0aW9uIiwiZGlzcGxheSIsImUiLCJ0YXJnZXQiLCJpbnB1dCIsIm1haW4iLCJ0aXRsZSIsImZvcm1hdEV0aGVyIiwiaW1hZ2UiLCJmb290ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "./styles/Home.module.css":
/*!********************************!*\
  !*** ./styles/Home.module.css ***!
  \********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"main\": \"Home_main__nLjiQ\",\n\t\"footer\": \"Home_footer____T7K\",\n\t\"image\": \"Home_image__yn5pu\",\n\t\"input\": \"Home_input__ZarWZ\",\n\t\"title\": \"Home_title__T09hD\",\n\t\"description\": \"Home_description__41Owk\",\n\t\"button\": \"Home_button__Zs7A2\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvSG9tZS5tb2R1bGUuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWNvZnJvbnRlbmQvLi9zdHlsZXMvSG9tZS5tb2R1bGUuY3NzPzI1NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwibWFpblwiOiBcIkhvbWVfbWFpbl9fbkxqaVFcIixcblx0XCJmb290ZXJcIjogXCJIb21lX2Zvb3Rlcl9fX19UN0tcIixcblx0XCJpbWFnZVwiOiBcIkhvbWVfaW1hZ2VfX3luNXB1XCIsXG5cdFwiaW5wdXRcIjogXCJIb21lX2lucHV0X19aYXJXWlwiLFxuXHRcInRpdGxlXCI6IFwiSG9tZV90aXRsZV9fVDA5aERcIixcblx0XCJkZXNjcmlwdGlvblwiOiBcIkhvbWVfZGVzY3JpcHRpb25fXzQxT3drXCIsXG5cdFwiYnV0dG9uXCI6IFwiSG9tZV9idXR0b25fX1pzN0EyXCJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/Home.module.css\n");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "web3modal":
/*!****************************!*\
  !*** external "web3modal" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("web3modal");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.js"));
module.exports = __webpack_exports__;

})();